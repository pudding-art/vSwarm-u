# MIT License
#
# Copyright (c) 2022 EASE lab, University of Edinburgh
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# Authors: David Schall

name: Release

on:
  workflow_dispatch:

  # For all pushed tags
  push:
    tags:
      - 'v*'



env:
  ARTIFACTS_DIR: ${{ github.workspace }}/artifacts/
  KERNEL: ${{ github.workspace }}/artifacts/kernel
  DISK: ${{ github.workspace }}/artifacts/disk-image.qcow2
  TEST_CLIENT: ${{ github.workspace }}/artifacts/test-client

jobs:

  ### We want to use the cache from the build stage
  ## Check if the cache exist otherwise download it from the artifacts
  prepare-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Use the cache from the build workflow
        id: build-artifacts
        uses: actions/cache@v3
        with:
          path: artifacts/
          key: ${{ runner.os }}-${{ github.sha }}-release

      - name: Download latest kernel
        if: steps.build-artifacts.outputs.cache-hit != 'true'
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_kernel.yml
          name: vmlinux-amd64
          path: tmp

      - name: Download latest test client
        if: steps.build-artifacts.outputs.cache-hit != 'true'
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: test_client.yml
          name: test-client
          path: tmp

      - name: Download latest base image
        if: steps.build-artifacts.outputs.cache-hit != 'true'
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: create_base_image.yml
          name: disk-image-amd64
          # workflow_conclusion: success
          run_id: 2477855216
          path: disktmp


      - name: Copy Artifacts
        if: steps.build-artifacts.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ env.ARTIFACTS_DIR }}
          cp tmp/kernel ${{ env.KERNEL }}
          cp tmp/test-client ${{ env.TEST_CLIENT }}
          ./resources/artifacts.sh decompress-split disktmp/disk-image.qcow2
          cp temp/disk-image.qcow2 ${{ env.DISK }}





  release:
    name: Release
    needs: prepare-artifacts
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            arch: amd64
    runs-on: ${{ matrix.os }}
    # env:
    #   KERNEL: ${{ env.KERNEL }}
    #   DISK: ${{ env.DISK }}
    #   TEST_CLIENT: ${{ env.TEST_CLIENT }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Use the cache from the build workflow
        id: build-artifacts
        uses: actions/cache@v3
        with:
          path: artifacts/
          key: ${{ runner.os }}-${{ github.sha }}-release



      - name: Check Release
        working-directory: resources
        run: make check-release

      - name: Get Release artifacts
        id: artifacts
        working-directory: resources
        run: make release-artifacts

      - name: Get the version
        id: version
        working-directory: resources
        run: make release-version


      ## Create the release
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: true
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.artifacts.outputs.VERSION }}
          # body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}


      - name: Upload Artifacts
        working-directory: resources
        env:
          GITHUB_TOKEN: ${{ github.token }}
          RELEASE_ID: ${{ steps.create_release.outputs.id }}
        id: upload
        run: |
          make upload_all_artifacts


      # - uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.8'
      # - run: pip install tqdm requests
      # # - uses: BSFishy/pip-action@v1
      # #   with:
      # #     packages: |
      # #       tqdm
      # #       requests
      # #       tarfile

      # - name: Upload Artifacts
      #   working-directory: resources
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #     RELEASE_ID: ${{ steps.create_release.outputs.id }}
      #   id: upload
      #   run: |
      #     python ./upload_assets.py \
      #           --kernel ${{ env.KERNEL }} \
      #           --disk-image ${{ env.DISK }} \
      #           --client ${{ env.TEST_CLIENT }} \
      #           --release-id ${{ steps.create_release.outputs.id }}












